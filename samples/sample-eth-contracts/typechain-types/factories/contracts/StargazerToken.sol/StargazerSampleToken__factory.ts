/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StargazerSampleToken,
  StargazerSampleTokenInterface,
} from "../../../contracts/StargazerToken.sol/StargazerSampleToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601481526020017f5374617267617a657253616d706c65546f6b656e0000000000000000000000008152506040518060400160405280600381526020017f535354000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009692919062000258565b508060049080519060200190620000af92919062000258565b505050620000cf336a084595161401484a000000620000d560201b60201c565b620004b4565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000148576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200013f9062000340565b60405180910390fd5b6200015c600083836200024e60201b60201c565b806002600082825462000170919062000390565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001c7919062000390565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200022e919062000362565b60405180910390a36200024a600083836200025360201b60201c565b5050565b505050565b505050565b8280546200026690620003f7565b90600052602060002090601f0160209004810192826200028a5760008555620002d6565b82601f10620002a557805160ff1916838001178555620002d6565b82800160010185558215620002d6579182015b82811115620002d5578251825591602001919060010190620002b8565b5b509050620002e59190620002e9565b5090565b5b8082111562000304576000816000905550600101620002ea565b5090565b600062000317601f836200037f565b915062000324826200048b565b602082019050919050565b6200033a81620003ed565b82525050565b600060208201905081810360008301526200035b8162000308565b9050919050565b60006020820190506200037960008301846200032f565b92915050565b600082825260208201905092915050565b60006200039d82620003ed565b9150620003aa83620003ed565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620003e257620003e16200042d565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200041057607f821691505b602082108114156200042757620004266200045c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6117ef80620004c46000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d6814610228578063a457c2d714610244578063a9059cbb14610274578063dd62ed3e146102a4576100cf565b806342966c68146101be57806370a08231146101da57806395d89b411461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102d4565b6040516100e9919061115a565b60405180910390f35b61010c60048036038101906101079190610f16565b610366565b604051610119919061113f565b60405180910390f35b61012a610389565b60405161013791906112bc565b60405180910390f35b61015a60048036038101906101559190610ec7565b610393565b604051610167919061113f565b60405180910390f35b6101786103c2565b60405161018591906112d7565b60405180910390f35b6101a860048036038101906101a39190610f16565b6103cb565b6040516101b5919061113f565b60405180910390f35b6101d860048036038101906101d39190610f52565b610402565b005b6101f460048036038101906101ef9190610e62565b61040f565b60405161020191906112bc565b60405180910390f35b610212610457565b60405161021f919061115a565b60405180910390f35b610242600480360381019061023d9190610f52565b6104e9565b005b61025e60048036038101906102599190610f16565b6104f6565b60405161026b919061113f565b60405180910390f35b61028e60048036038101906102899190610f16565b61056d565b60405161029b919061113f565b60405180910390f35b6102be60048036038101906102b99190610e8b565b610590565b6040516102cb91906112bc565b60405180910390f35b6060600380546102e390611420565b80601f016020809104026020016040519081016040528092919081815260200182805461030f90611420565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b600080610371610617565b905061037e81858561061f565b600191505092915050565b6000600254905090565b60008061039e610617565b90506103ab8582856107ea565b6103b6858585610876565b60019150509392505050565b60006012905090565b6000806103d6610617565b90506103f78185856103e88589610590565b6103f2919061130e565b61061f565b600191505092915050565b61040c3382610af7565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461046690611420565b80601f016020809104026020016040519081016040528092919081815260200182805461049290611420565b80156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b5050505050905090565b6104f33382610cce565b50565b600080610501610617565b9050600061050f8286610590565b905083811015610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b9061127c565b60405180910390fd5b610561828686840361061f565b60019250505092915050565b600080610578610617565b9050610585818585610876565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561068f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106869061125c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f6906111bc565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107dd91906112bc565b60405180910390a3505050565b60006107f68484610590565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108705781811015610862576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610859906111dc565b60405180910390fd5b61086f848484840361061f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd9061123c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094d9061117c565b60405180910390fd5b610961838383610e2e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109de906111fc565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a7a919061130e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ade91906112bc565b60405180910390a3610af1848484610e33565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5e9061121c565b60405180910390fd5b610b7382600083610e2e565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf09061119c565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610c509190611364565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cb591906112bc565b60405180910390a3610cc983600084610e33565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d359061129c565b60405180910390fd5b610d4a60008383610e2e565b8060026000828254610d5c919061130e565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610db1919061130e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e1691906112bc565b60405180910390a3610e2a60008383610e33565b5050565b505050565b505050565b600081359050610e478161178b565b92915050565b600081359050610e5c816117a2565b92915050565b600060208284031215610e7457600080fd5b6000610e8284828501610e38565b91505092915050565b60008060408385031215610e9e57600080fd5b6000610eac85828601610e38565b9250506020610ebd85828601610e38565b9150509250929050565b600080600060608486031215610edc57600080fd5b6000610eea86828701610e38565b9350506020610efb86828701610e38565b9250506040610f0c86828701610e4d565b9150509250925092565b60008060408385031215610f2957600080fd5b6000610f3785828601610e38565b9250506020610f4885828601610e4d565b9150509250929050565b600060208284031215610f6457600080fd5b6000610f7284828501610e4d565b91505092915050565b610f84816113aa565b82525050565b6000610f95826112f2565b610f9f81856112fd565b9350610faf8185602086016113ed565b610fb8816114b0565b840191505092915050565b6000610fd06023836112fd565b9150610fdb826114c1565b604082019050919050565b6000610ff36022836112fd565b9150610ffe82611510565b604082019050919050565b60006110166022836112fd565b91506110218261155f565b604082019050919050565b6000611039601d836112fd565b9150611044826115ae565b602082019050919050565b600061105c6026836112fd565b9150611067826115d7565b604082019050919050565b600061107f6021836112fd565b915061108a82611626565b604082019050919050565b60006110a26025836112fd565b91506110ad82611675565b604082019050919050565b60006110c56024836112fd565b91506110d0826116c4565b604082019050919050565b60006110e86025836112fd565b91506110f382611713565b604082019050919050565b600061110b601f836112fd565b915061111682611762565b602082019050919050565b61112a816113d6565b82525050565b611139816113e0565b82525050565b60006020820190506111546000830184610f7b565b92915050565b600060208201905081810360008301526111748184610f8a565b905092915050565b6000602082019050818103600083015261119581610fc3565b9050919050565b600060208201905081810360008301526111b581610fe6565b9050919050565b600060208201905081810360008301526111d581611009565b9050919050565b600060208201905081810360008301526111f58161102c565b9050919050565b600060208201905081810360008301526112158161104f565b9050919050565b6000602082019050818103600083015261123581611072565b9050919050565b6000602082019050818103600083015261125581611095565b9050919050565b60006020820190508181036000830152611275816110b8565b9050919050565b60006020820190508181036000830152611295816110db565b9050919050565b600060208201905081810360008301526112b5816110fe565b9050919050565b60006020820190506112d16000830184611121565b92915050565b60006020820190506112ec6000830184611130565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611319826113d6565b9150611324836113d6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561135957611358611452565b5b828201905092915050565b600061136f826113d6565b915061137a836113d6565b92508282101561138d5761138c611452565b5b828203905092915050565b60006113a3826113b6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561140b5780820151818401526020810190506113f0565b8381111561141a576000848401525b50505050565b6000600282049050600182168061143857607f821691505b6020821081141561144c5761144b611481565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61179481611398565b811461179f57600080fd5b50565b6117ab816113d6565b81146117b657600080fd5b5056fea264697066735822122030115b6dccb565f53a129c50359c04c91794a1e51989b53e61992272b3c4216a64736f6c63430008040033";

type StargazerSampleTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StargazerSampleTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StargazerSampleToken__factory extends ContractFactory {
  constructor(...args: StargazerSampleTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StargazerSampleToken> {
    return super.deploy(overrides || {}) as Promise<StargazerSampleToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StargazerSampleToken {
    return super.attach(address) as StargazerSampleToken;
  }
  override connect(signer: Signer): StargazerSampleToken__factory {
    return super.connect(signer) as StargazerSampleToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StargazerSampleTokenInterface {
    return new utils.Interface(_abi) as StargazerSampleTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StargazerSampleToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StargazerSampleToken;
  }
}
